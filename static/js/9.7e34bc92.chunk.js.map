{"version":3,"file":"static/js/9.7e34bc92.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/UI/Container.js","hooks/useRedux.js","components/UI/Headers.js","components/ContactForm/ContactForm.jsx","components/ContactsList/Item/Item.styled.js","components/ContactsList/Item/Item.jsx","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx","schema/schema.js"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContact = styled(Form)`\n  border: 1px solid ${({ theme }) => theme.colors.black};\n  display: flex;\n  flex-direction: column;\n  width: 360px;\n  padding: ${({ theme }) => theme.space.ml};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n`;\n\nexport const Input = styled(Field)`\n  margin-top: ${({ theme }) => theme.space.ml};\n`;\n\nexport const Button = styled.button`\n  margin-top: ${({ theme }) => theme.space.ml};\n  width: 130px;\n  border-radius: 5px;\n  border: ${({ theme }) => theme.borders.none};\n  cursor: pointer;\n`;\n\nexport const ErrorText = styled.p`\n  color: ${({ theme }) => theme.colors.red};\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  align-items: center;\n  width: 380px;\n  border-radius: ${({ theme }) => theme.radii.normal};\n`;\n","import { createSelectorHook, useDispatch } from 'react-redux';\n\nexport const useRedux = () => {\n  const useSelector = createSelectorHook();\n  const dispatch = useDispatch();\n\n  return [dispatch, useSelector];\n};\n","import styled from 'styled-components';\n\nexport const FirstHeader = styled.h1`\n  display: flex;\n  justify-content: center;\n  color: ${({ theme }) => theme.colors.black};\n  font-size: ${({ theme }) => theme.fontSizes.l};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const SecondHeader = styled.h2`\n  display: flex;\n  justify-content: center;\n  color: ${({ theme }) => theme.colors.black};\n  font-size: ${({ theme }) => theme.fontSizes.ml};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { schemaFromContacts } from 'schema/schema';\nimport { getContacts, addNewContact } from 'redux/contactsSlice';\nimport { Notify } from 'notiflix';\nimport {\n  FormContact,\n  Label,\n  Input,\n  Button,\n  ErrorText,\n} from './ContactForm.styled';\nimport { useRedux } from 'hooks/useRedux';\n\nconst FormError = ({ name }) => (\n  <ErrorMessage\n    name={name}\n    render={message => <ErrorText>{message}</ErrorText>}\n  />\n);\n\nexport const ContactForm = () => {\n  const [dispatch, useSelector] = useRedux();\n  const contacts = useSelector(getContacts);\n\n  const isContact = data => {\n    const result = contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n    return result;\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const contact = {\n      name: values.name,\n      number: values.number,\n    };\n    if (isContact(contact)) {\n      Notify.failure(`${contact.name} already added`);\n      return;\n    } else {\n      dispatch(addNewContact(contact));\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={schemaFromContacts}\n    >\n      <FormContact>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <FormError name=\"name\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <FormError name=\"number\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContact>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ theme }) => theme.space.ml};\n`;\n\nexport const Text = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-right: ${({ theme }) => theme.space.m};\n`;\n\nexport const Button = styled.button`\n  border: ${({ theme }) => theme.radii.none};\n  border-radius: ${({ theme }) => theme.radii.none};\n  cursor: pointer;\n`;\n","import { Item, Text, Button } from './Item.styled';\nimport { useEffect } from 'react';\nimport { useRedux } from 'hooks/useRedux';\nimport {\n  getContacts,\n  getFilterValue,\n  getAllContacts,\n  deleteContact,\n} from 'redux/contactsSlice';\n\nexport const ContactItem = () => {\n  const [dispatch, useSelector] = useRedux();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilterValue);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  const onDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {filteredContacts?.map(({ id, name, phone }) => (\n        <Item key={id}>\n          <Text>\n            {name} : {phone}\n          </Text>\n          <Button onClick={() => onDelete(id)}>Delete</Button>\n        </Item>\n      ))}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 320px;\n`;\n","import { ContactItem } from './Item/Item';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  return (\n    <>\n      <List>\n        <ContactItem />\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 320px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: ${({ theme }) => theme.space.ml};\n`;\n","import { useRedux } from 'hooks/useRedux';\nimport { filterContacts, getFilterValue } from 'redux/contactsSlice';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const [dispatch, useSelector] = useRedux();\n  const filter = useSelector(getFilterValue);\n\n  const changeFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={changeFilter} />\n    </Label>\n  );\n};\n","import { Container } from 'components/UI/Container';\nimport { FirstHeader, SecondHeader } from 'components/UI/Headers';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\n\nconst Contacts = () => {\n  return (\n    <Container>\n      <FirstHeader>Phonebook</FirstHeader>\n      <ContactForm />\n      <SecondHeader>Contacts</SecondHeader>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\nexport default Contacts;\n","import * as yup from 'yup';\n\nexport const schemaFromContacts = yup.object().shape({\n  name: yup\n    .string()\n    .required('Enter name')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: yup\n    .string()\n    .required('Enter number')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const schemaFromLogin = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(5).required(),\n});\n\nexport const schemaFromSignUp = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(5).required(),\n});\n"],"names":["FormContact","styled","Form","theme","colors","black","space","ml","Label","Input","Field","Button","borders","none","ErrorText","red","Container","radii","normal","useRedux","useSelector","createSelectorHook","useDispatch","FirstHeader","fontSizes","l","fontWeights","bold","SecondHeader","FormError","name","render","message","ContactForm","dispatch","contacts","getContacts","initialValues","number","onSubmit","values","data","resetForm","contact","find","toLowerCase","Notify","addNewContact","validationSchema","schemaFromContacts","type","Item","Text","m","ContactItem","filter","getFilterValue","filteredContacts","includes","useEffect","getAllContacts","map","id","phone","onClick","deleteContact","onDelete","List","ContactList","Filter","value","onChange","e","filterContacts","target","yup","shape","required","matches","schemaFromLogin","email","password","min","schemaFromSignUp"],"sourceRoot":""}