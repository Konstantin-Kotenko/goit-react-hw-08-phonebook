{"version":3,"file":"static/js/596.7ecabd8d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/UI/Container.js","components/UI/Headers.js","hooks/useRedux.js","components/ContactForm/ContactForm.jsx","components/ContactsList/Item/Item.styled.js","components/ContactsList/Item/Item.jsx","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx","schema/schema.js"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContact = styled(Form)`\n  border: 1px solid ${({ theme }) => theme.colors.black};\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  border-radius: ${({ theme }) => theme.radii.normal};\n  width: 360px;\n  padding: ${({ theme }) => theme.space.ml};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled(Field)`\n  margin-top: ${({ theme }) => theme.space.ml};\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  text-decoration: none;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  margin-top: ${({ theme }) => theme.space.ml};\n  width: 130px;\n  margin: 15px auto 0;\n  border: ${({ theme }) => theme.borders.none};\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.black};\n  font-weight: 500;\n  :hover {\n    color: ${({ theme }) => theme.colors.black};\n    background-color: ${({ theme }) => theme.colors.white};\n  }\n`;\n\nexport const Name = styled.p`\n  margin: 0 auto;\n`;\n\nexport const ErrorText = styled.p`\n  color: ${({ theme }) => theme.colors.red};\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  height: 100vh;\n  border-radius: ${({ theme }) => theme.radii.normal};\n`;\n","import styled from 'styled-components';\n\nexport const FirstHeader = styled.h1`\n  display: flex;\n  justify-content: center;\n  color: ${({ theme }) => theme.colors.black};\n  font-size: ${({ theme }) => theme.fontSizes.l};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const SecondHeader = styled.h2`\n  display: flex;\n  justify-content: center;\n  color: ${({ theme }) => theme.colors.black};\n  font-size: ${({ theme }) => theme.fontSizes.ml};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const Quot = styled.p`\n  display: flex;\n  justify-content: center;\n  color: ${({ theme }) => theme.colors.black};\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n","import { createSelectorHook, useDispatch } from 'react-redux';\n\nexport const useRedux = () => {\n  const useSelector = createSelectorHook();\n  const dispatch = useDispatch();\n\n  return [dispatch, useSelector];\n};\n","import { Formik, ErrorMessage } from 'formik';\nimport { schemaFromContacts } from 'schema/schema';\nimport { getContacts, addNewContact } from 'redux/contactsSlice';\nimport { Notify } from 'notiflix';\nimport {\n  FormContact,\n  Label,\n  Input,\n  Button,\n  ErrorText,\n  Name,\n} from './ContactForm.styled';\nimport { useRedux } from 'hooks/useRedux';\n\nconst FormError = ({ name }) => (\n  <ErrorMessage\n    name={name}\n    render={message => <ErrorText>{message}</ErrorText>}\n  />\n);\n\nexport const ContactForm = () => {\n  const [dispatch, useSelector] = useRedux();\n  const contacts = useSelector(getContacts);\n\n  const isContact = data => {\n    const result = contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n    return result;\n  };\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const contact = {\n      name,\n      number,\n    };\n    if (isContact(contact)) {\n      Notify.failure(`${contact.name} already added`);\n      return;\n    } else {\n      dispatch(addNewContact(contact));\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={schemaFromContacts}\n    >\n      <FormContact>\n        <Label>\n          <Name>Name</Name>\n          <Input type=\"text\" name=\"name\" placeholder=\"Martin\" />\n          <FormError name=\"name\" />\n        </Label>\n        <Label>\n          <Name>Number</Name>\n          <Input type=\"tel\" name=\"number\" placeholder=\"+380 (67) 425-99-75\" />\n          <FormError name=\"number\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContact>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ theme }) => theme.space.ml};\n`;\n\nexport const Text = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-right: ${({ theme }) => theme.space.m};\n`;\n\nexport const Button = styled.button`\n  border: ${({ theme }) => theme.radii.none};\n  border-radius: ${({ theme }) => theme.radii.none};\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  :hover {\n    color: black;\n    background-color: white;\n  }\n  background-color: black;\n  color: white;\n`;\n","import { Item, Text, Button } from './Item.styled';\nimport { useEffect } from 'react';\nimport { useRedux } from 'hooks/useRedux';\nimport {\n  getContacts,\n  getFilterValue,\n  getAllContacts,\n  deleteContact,\n} from 'redux/contactsSlice';\n\nexport const ContactItem = () => {\n  const [dispatch, useSelector] = useRedux();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilterValue);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  const onDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {filteredContacts?.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Text>\n            {name} : {number}\n          </Text>\n          <Button onClick={() => onDelete(id)}>Delete</Button>\n        </Item>\n      ))}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 320px;\n  margin: 0 auto;\n`;\n","import { ContactItem } from './Item/Item';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  return (\n    <List>\n      <ContactItem />\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  align-items: center;\n  width: 320px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: ${({ theme }) => theme.space.ml};\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  text-decoration: none;\n  font-weight: 500;\n`;\n","import { useRedux } from 'hooks/useRedux';\nimport { filterContacts, getFilterValue } from 'redux/contactsSlice';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const [dispatch, useSelector] = useRedux();\n  const filter = useSelector(getFilterValue);\n\n  const changeFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={changeFilter} />\n    </Label>\n  );\n};\n","import { Container } from 'components/UI/Container';\nimport { FirstHeader, SecondHeader } from 'components/UI/Headers';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\n\nconst Contacts = () => {\n  return (\n    <Container>\n      <FirstHeader>Phonebook</FirstHeader>\n      <ContactForm />\n      <SecondHeader>Contacts</SecondHeader>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\nexport default Contacts;\n","import * as yup from 'yup';\n\nconst phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nexport const schemaFromContacts = yup.object().shape({\n  name: yup\n    .string()\n    .max(10)\n    .required('Enter name')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: yup\n    .string()\n    .required('Enter number')\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const schemaFromLogin = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(5).required(),\n});\n\nexport const schemaFromSignUp = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(5).required(),\n});\n"],"names":["FormContact","styled","Form","theme","colors","black","radii","normal","space","ml","Label","Input","Field","Button","borders","none","white","Name","ErrorText","red","Container","FirstHeader","fontSizes","l","fontWeights","bold","SecondHeader","Quot","m","useRedux","useSelector","createSelectorHook","useDispatch","FormError","name","render","message","ContactForm","dispatch","contacts","getContacts","initialValues","number","onSubmit","data","resetForm","contact","find","toLowerCase","Notify","addNewContact","validationSchema","schemaFromContacts","type","placeholder","Item","Text","ContactItem","filter","getFilterValue","filteredContacts","includes","useEffect","getAllContacts","map","id","onClick","deleteContact","onDelete","List","ContactList","Filter","value","onChange","e","filterContacts","target","yup","shape","max","required","matches","schemaFromLogin","email","password","min","schemaFromSignUp"],"sourceRoot":""}