{"version":3,"file":"static/js/122.350dcb4e.chunk.js","mappings":"+NAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iIACF,qBAAGE,MAAkBC,OAAOC,SAIrC,qBAAGF,MAAkBG,MAAMC,MAG3BC,EAAQP,EAAAA,GAAAA,MAAH,sFAMLQ,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,4CACF,qBAAGE,MAAkBG,MAAMC,MAG9BI,EAASV,EAAAA,GAAAA,OAAH,wHACH,qBAAGE,MAAkBG,MAAMC,MAG/B,qBAAGJ,MAAkBS,QAAQC,QAI5BC,EAAYb,EAAAA,GAAAA,EAAH,uCACX,qBAAGE,MAAkBC,OAAOW,O,UCN1BC,GAtBqBC,EAAAA,KAAaC,MAAM,CACnDC,KAAMF,EAAAA,KAEHG,SAAS,cACTC,QACC,yHACA,0IAEJC,OAAQL,EAAAA,KAELG,SAAS,gBACTC,QACC,6EACA,kGAIyBJ,EAAAA,KAAaC,MAAM,CAChDK,MAAON,EAAAA,KAAaM,QAAQH,WAC5BI,SAAUP,EAAAA,KAAaQ,IAAI,GAAGL,aAGAH,EAAAA,KAAaC,MAAM,CACjDC,KAAMF,EAAAA,KAAaG,WACnBG,MAAON,EAAAA,KAAaM,QAAQH,WAC5BI,SAAUP,EAAAA,KAAaQ,IAAI,GAAGL,c,SCjB1BM,EAAY,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAH,OAChB,SAAC,KAAD,CACEA,KAAMA,EACNQ,OAAQ,SAAAC,GAAO,OAAI,SAACd,EAAD,UAAYc,QAItBC,EAAU,WAErB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEX,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDO,SAJiB,SAACC,EAAD,GAA2B,EAAhBC,WAK5BC,iBAAkBlB,EAHpB,UAKE,UAAChB,EAAD,YACE,UAACQ,EAAD,oBACO,SAACC,EAAD,CAAO0B,KAAK,OAAOhB,KAAK,UAC7B,SAACO,EAAD,CAAWP,KAAK,aAGlB,UAACX,EAAD,qBACQ,SAACC,EAAD,CAAO0B,KAAK,QAAQhB,KAAK,WAC/B,SAACO,EAAD,CAAWP,KAAK,cAGlB,UAACX,EAAD,wBACW,SAACC,EAAD,CAAO0B,KAAK,WAAWhB,KAAK,cACrC,SAACO,EAAD,CAAWP,KAAK,iBAElB,SAACR,EAAD,CAAQwB,KAAK,SAAb,0BClCR,EAJe,WACb,OAAO,SAACN,EAAD","sources":["components/ContactForm/ContactForm.styled.js","schema/schema.js","components/SignUp/SignUp.jsx","pages/SignUp/SignUp.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContact = styled(Form)`\n  border: 1px solid ${({ theme }) => theme.colors.black};\n  display: flex;\n  flex-direction: column;\n  width: 360px;\n  padding: ${({ theme }) => theme.space.ml};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n`;\n\nexport const Input = styled(Field)`\n  margin-top: ${({ theme }) => theme.space.ml};\n`;\n\nexport const Button = styled.button`\n  margin-top: ${({ theme }) => theme.space.ml};\n  width: 130px;\n  border-radius: 5px;\n  border: ${({ theme }) => theme.borders.none};\n  cursor: pointer;\n`;\n\nexport const ErrorText = styled.p`\n  color: ${({ theme }) => theme.colors.red};\n`;\n","import * as yup from 'yup';\n\nexport const schemaFromContacts = yup.object().shape({\n  name: yup\n    .string()\n    .required('Enter name')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: yup\n    .string()\n    .required('Enter number')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const schemaFromLogin = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(5).required(),\n});\n\nexport const schemaFromSignUp = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(5).required(),\n});\n","import {\n  FormContact,\n  Label,\n  ErrorText,\n  Input,\n  Button,\n} from 'components/ContactForm/ContactForm.styled';\nimport { Formik, ErrorMessage } from 'formik';\nimport { schemaFromSignUp } from 'schema/schema';\n\nconst FormError = ({ name }) => (\n  <ErrorMessage\n    name={name}\n    render={message => <ErrorText>{message}</ErrorText>}\n  />\n);\n\nexport const SignUpp = () => {\n  const handleSubmit = (values, { resetForm }) => {};\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={schemaFromSignUp}\n    >\n      <FormContact>\n        <Label>\n          Name <Input type=\"name\" name=\"name\" />\n          <FormError name=\"name\" />\n        </Label>\n\n        <Label>\n          Email <Input type=\"email\" name=\"email\" />\n          <FormError name=\"email\" />\n        </Label>\n\n        <Label>\n          Password <Input type=\"password\" name=\"password\" />\n          <FormError name=\"password\" />\n        </Label>\n        <Button type=\"submit\">SignUp</Button>\n      </FormContact>\n    </Formik>\n  );\n};\n","import { SignUpp } from 'components/SignUp/SignUp';\n\nconst SignUp = () => {\n  return <SignUpp />;\n};\n\nexport default SignUp;\n"],"names":["FormContact","styled","Form","theme","colors","black","space","ml","Label","Input","Field","Button","borders","none","ErrorText","red","schemaFromSignUp","yup","shape","name","required","matches","number","email","password","min","FormError","render","message","SignUpp","initialValues","onSubmit","values","resetForm","validationSchema","type"],"sourceRoot":""}