{"version":3,"file":"static/js/977.9bb4c996.chunk.js","mappings":"qLAEaA,E,QAAYC,GAAAA,IAAH,oGAIH,qBAAGC,MAAkBC,MAAMC,W,yKCFxCC,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2QAgBJM,EAAUN,EAAAA,GAAAA,GAAH,gLASPO,EAAUP,EAAAA,GAAAA,GAAH,sLAWAQ,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,YAEjD,OACE,UAACH,EAAD,YACE,SAACC,EAAD,WACE,SAACH,EAAD,CAAMS,GAAG,IAAT,oBAEDJ,IACC,SAACF,EAAD,WACE,SAACH,EAAD,CAAMS,GAAG,WAAT,4BC3CJL,EAAaR,EAAAA,GAAAA,GAAH,2HAQVM,EAAUN,EAAAA,GAAAA,GAAH,4GAOPO,EAAUP,EAAAA,GAAAA,GAAH,qHAOPI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,yMAYJc,EAASd,EAAAA,GAAAA,OAAH,yRAgBNe,EAAOf,EAAAA,GAAAA,EAAH,sCAIGgB,EAAU,WACrB,IAAMC,GAAOP,EAAAA,EAAAA,IAAYQ,EAAAA,IACnBT,GAAWC,EAAAA,EAAAA,IAAYS,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,8BACGZ,GACC,UAAC,EAAD,YACE,SAAC,EAAD,WACE,UAACM,EAAD,uBAAgBE,QAElB,SAAC,EAAD,WACE,SAACH,EAAD,CAAQQ,KAAK,SAASC,QAbV,WACpBH,GAASI,EAAAA,EAAAA,OACR,MAWO,0BAMJ,UAAC,EAAD,YACE,SAAC,EAAD,WACE,SAAC,EAAD,CAAMX,GAAG,SAAT,uBAEF,SAAC,EAAD,WACE,SAAC,EAAD,CAAMA,GAAG,QAAT,2B,SCxFCY,EAASzB,EAAAA,GAAAA,OAAH,qYCyBnB,EAlBe,WACb,IAAMoB,GAAWC,EAAAA,EAAAA,MAMjB,OAJAK,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,QACR,CAACP,KAGF,UAACrB,EAAA,EAAD,YACE,UAAC0B,EAAD,YACE,SAACjB,EAAD,KACA,SAACQ,EAAD,QAEF,SAAC,KAAD","sources":["components/UI/Container.js","layout/common/Navigation/Navigation.jsx","layout/common/UserBar/UserBar.jsx","layout/common/Header.js","layout/Layout.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  height: 100vh;\n  border-radius: ${({ theme }) => theme.radii.normal};\n`;\n","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  :hover {\n    color: black;\n    background-color: white;\n  }\n  &.active {\n    color: black;\n    background-color: white;\n  }\n`;\n\nconst NavList = styled.ul`\n  display: flex;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  align-items: center;\n  padding: 0;\n`;\n\nconst NavItem = styled.li`\n  cursor: pointer;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  :not(:first-child) {\n    margin-left: auto;\n  }\n`;\n\nexport const Navigation = () => {\n  const isLogged = useSelector(state => state.auth.isLogged);\n\n  return (\n    <NavList>\n      <NavItem>\n        <Link to=\"/\">Home</Link>\n      </NavItem>\n      {isLogged && (\n        <NavItem>\n          <Link to=\"contacts\">Contacts</Link>\n        </NavItem>\n      )}\n    </NavList>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logoutUser, getUserName, getLogging } from 'redux/authSlice';\nimport { Navigate } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst Navigation = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n`;\n\nconst NavList = styled.ul`\n  display: flex;\n  margin: 0;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NavItem = styled.li`\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n`;\n\nconst Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  &.active {\n    color: black;\n    background-color: white;\n  }\n`;\n\nconst Button = styled.button`\n  border-radius: 4px;\n  display: block;\n  padding: 12px 25px;\n  border: none;\n  cursor: pointer;\n  color: white;\n  background-color: black;\n  font-weight: bold;\n  margin-left: 15px;\n  :hover {\n    color: black;\n    background-color: white;\n  }\n`;\n\nconst User = styled.p`\n  margin: 0;\n`;\n\nexport const UserBar = () => {\n  const name = useSelector(getUserName);\n  const isLogged = useSelector(getLogging);\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logoutUser());\n    <Navigate to=\"/\" replace />;\n  };\n\n  return (\n    <>\n      {isLogged ? (\n        <Navigation>\n          <NavItem>\n            <User>Welcome: {name}</User>\n          </NavItem>\n          <NavItem>\n            <Button type=\"button\" onClick={logoutHandler}>\n              Logout\n            </Button>\n          </NavItem>\n        </Navigation>\n      ) : (\n        <NavList>\n          <NavItem>\n            <Link to=\"signUp\">SignUp</Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"login\">Login</Link>\n          </NavItem>\n        </NavList>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  align-items: center;\n  padding: 8px 16px;\n  margin-bottom: 16px;\n  color: rgb(255, 255, 255);\n  background-color: black;\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 4px -1px,\n    rgb(0 0 0 / 14%) 0px 4px 5px 0px, rgb(0 0 0 / 12%) 0px 1px 10px 0px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchCurrentUser } from 'redux/authSlice';\nimport { Navigation } from './common/Navigation/Navigation';\nimport { UserBar } from './common/UserBar/UserBar';\nimport { Container } from '../components/UI/Container';\nimport { Header } from './common/Header';\n\nconst Layout = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Header>\n        <Navigation />\n        <UserBar />\n      </Header>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default Layout;\n"],"names":["Container","styled","theme","radii","normal","Link","NavLink","NavList","NavItem","Navigation","isLogged","useSelector","state","auth","to","Button","User","UserBar","name","getUserName","getLogging","dispatch","useDispatch","type","onClick","logoutUser","Header","useEffect","fetchCurrentUser"],"sourceRoot":""}